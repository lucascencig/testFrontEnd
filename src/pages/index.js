import Head from "next/head";

import { Inter, Island_Moments } from "next/font/google";
import styles from "@/styles/Home.module.css";
import axios from "axios";
const inter = Inter({ subsets: ["latin"] });
import { useEffect, useState } from "react";
import {
  Container,
  Stack,
  Input,
  Button,
  SimpleGrid,
  Flex,
  Box,
  Modal,
  ModalOverlay,
  ModalHeader,
  ModalBody,
  ModalContent,
  ModalCloseButton,
  useDisclosure,
  Center,
  Image,
  Text,
  extendTheme
} from "@chakra-ui/react";
import PokemonCard from "@/components/PokemonCard";
import PokemonData from "@/components/PokemonData";

import { TbPokeball } from "react-icons/tb";



const borderRadius = {
  radii: {
    none: '0',
    sm: '0.125rem',
    base: '0.25rem',
    md: '0.375rem',
    lg: '0.5rem',
    xl: '0.75rem',
    '2xl': '1rem',
    '3xl': '1.5rem',
    full: '9999px',
  },
}

const theme = extendTheme({ borderRadius })

export default function Home() {
  const pokemonDataModal = useDisclosure();
  const myPokemonsModal = useDisclosure();


  const [isLoading, setIsLoading] = useState(false);
  const [pokemon, setPokemon] = useState([]);
  const [selectedPokemon, setSelectedPokemon] = useState();
  const [myPokemons, setMyPokemons] = useState([]);
  const [currentPage, setCurrentPage] = useState(
    "https://pokeapi.co/api/v2/pokemon/?limit=20&offset=0"
  );

  useEffect(() => {
    setIsLoading(true);
    axios.get(currentPage).then(async ({ data }) => {
      const promises = data.results.map((result) => axios(result.url));
      const fetchedPokemon = (await Promise.all(promises)).map(
        (res) => res.data
      );
      setPokemon((prev) => [...prev, ...fetchedPokemon]);
      setIsLoading(false);
    });
  }, [currentPage]);

  function handleNextPage() { }


  //FUNCION ABRIR MODAL POKEMON SELECCIONADO
  function handleViewPokemon(pokemon) {
    setSelectedPokemon(pokemon);
    pokemonDataModal.onOpen();
  }

  //FUNCION ABRIR MODAL DE POKEMONES CATCHED
  async function openModalMyPokemons(pokemon) {
    myPokemonsModal.onOpen();
    try {
      const allMyPokemons = await axios.get(`/api/catched`);
      setMyPokemons(allMyPokemons.data);
    } catch (error) {
      console.error("Error:", error);
    }
  }

  //FUNCION ELIMINAR POKEMON
  const handleDeletePokemon = async (pokemon) => {
    try {
      await axios.delete(`/api/catched/${pokemon.id}`);


      setMyPokemons((prevPokemons) => prevPokemons.filter((pokemonid) => pokemonid.id !== pokemon.id));
    } catch (error) {
      console.error("Error deleting pokemon:", error);
    }
  };
  return (
    <>
      <Head>
        <title>Pokemon Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex alignItems="center" minH="100vh" justifyContent="center">
        <Container maxW="container.lg">
          <Center mt="8">
            <Button as="button" onClick={openModalMyPokemons} pos="fixed" zIndex={99} colorScheme="green" borderRadius="full">
              <TbPokeball />

            </Button>
          </Center>
          <Stack p="5" alignItems="center" spacing="5">
            <SimpleGrid spacing="5" columns={{ base: 1, md: 5 }}>
              {pokemon.map((pokemon) => (
                <Box
                  as="button"
                  key={pokemon.id}
                  onClick={() => handleViewPokemon(pokemon)}
                >
                  <PokemonCard pokemon={pokemon} />
                </Box>
              ))}
            </SimpleGrid>

            <Button isLoading={false} onClick={handleNextPage}>
              Cargas m√°s
            </Button>
          </Stack>
        </Container>
      </Flex>


      <Modal {...pokemonDataModal}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader textTransform="capitalize">
            {selectedPokemon?.name}
          </ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            {selectedPokemon && <PokemonData pokemon={selectedPokemon} />}
          </ModalBody>
        </ModalContent>
      </Modal>


      <Modal {...myPokemonsModal}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>My Pokemons</ModalHeader>
          <ModalCloseButton />
          <ModalBody >
            <SimpleGrid spacing="5" columns={{ base: 1, md: 5 }}>
              {myPokemons.map((pokemon) => (
                <Box key={pokemon.id}>
                  <Image w={256} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/${pokemon.id}.png`} />
                  <Center fontSize="lg" >{pokemon.name}</Center>
                  <Button w={50} onClick={() => handleDeletePokemon(pokemon)}>X</Button>
                </Box>
              ))}
            </SimpleGrid>
          </ModalBody>
        </ModalContent>
      </Modal>



    </>
  );
}
